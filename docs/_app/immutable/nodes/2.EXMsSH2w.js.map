{"version":3,"file":"2.EXMsSH2w.js","sources":["../../../../../../node_modules/svelte/src/internal/shared/clone.js","../../../../../../node_modules/svelte/src/internal/client/dom/blocks/each.js","../../../../../../node_modules/svelte/src/internal/client/dom/elements/attributes.js","../../../../../../node_modules/svelte/src/internal/client/dom/elements/class.js","../../../../../../node_modules/svelte/src/internal/client/dom/elements/bindings/input.js","../../../../../../node_modules/svelte/src/internal/client/dom/elements/bindings/select.js","../../../../../../src/lib/plugin_utils.ts","../../../../../../src/lib/stores/pattern_store.svelte.ts","../../../../../../src/lib/types/plugin_events.ts","../../../../../../src/lib/components/atoms/Checkbox.svelte","../../../../../../src/lib/components/atoms/InfoBlock.svelte","../../../../../../node_modules/@sveltejs/kit/src/exports/index.js","../../../../../../src/lib/components/atoms/NumberInput.svelte","../../../../../../src/lib/components/atoms/StringInput.svelte","../../../../../../src/lib/components/RulesManager.svelte","../../../../../../src/lib/components/PatternEditor.svelte","../../../../../../src/routes/+page.svelte"],"sourcesContent":["/** @import { Snapshot } from './types' */\nimport { DEV } from 'esm-env';\nimport * as w from './warnings.js';\nimport { get_prototype_of, is_array, object_prototype } from './utils.js';\n\n/**\n * In dev, we keep track of which properties could not be cloned. In prod\n * we don't bother, but we keep a dummy array around so that the\n * signature stays the same\n * @type {string[]}\n */\nconst empty = [];\n\n/**\n * @template T\n * @param {T} value\n * @param {boolean} [skip_warning]\n * @returns {Snapshot<T>}\n */\nexport function snapshot(value, skip_warning = false) {\n\tif (DEV && !skip_warning) {\n\t\t/** @type {string[]} */\n\t\tconst paths = [];\n\n\t\tconst copy = clone(value, new Map(), '', paths);\n\t\tif (paths.length === 1 && paths[0] === '') {\n\t\t\t// value could not be cloned\n\t\t\tw.state_snapshot_uncloneable();\n\t\t} else if (paths.length > 0) {\n\t\t\t// some properties could not be cloned\n\t\t\tconst slice = paths.length > 10 ? paths.slice(0, 7) : paths.slice(0, 10);\n\t\t\tconst excess = paths.length - slice.length;\n\n\t\t\tlet uncloned = slice.map((path) => `- <value>${path}`).join('\\n');\n\t\t\tif (excess > 0) uncloned += `\\n- ...and ${excess} more`;\n\n\t\t\tw.state_snapshot_uncloneable(uncloned);\n\t\t}\n\n\t\treturn copy;\n\t}\n\n\treturn clone(value, new Map(), '', empty);\n}\n\n/**\n * @template T\n * @param {T} value\n * @param {Map<T, Snapshot<T>>} cloned\n * @param {string} path\n * @param {string[]} paths\n * @param {null | T} original The original value, if `value` was produced from a `toJSON` call\n * @returns {Snapshot<T>}\n */\nfunction clone(value, cloned, path, paths, original = null) {\n\tif (typeof value === 'object' && value !== null) {\n\t\tconst unwrapped = cloned.get(value);\n\t\tif (unwrapped !== undefined) return unwrapped;\n\n\t\tif (value instanceof Map) return /** @type {Snapshot<T>} */ (new Map(value));\n\t\tif (value instanceof Set) return /** @type {Snapshot<T>} */ (new Set(value));\n\n\t\tif (is_array(value)) {\n\t\t\tconst copy = /** @type {Snapshot<any>} */ ([]);\n\t\t\tcloned.set(value, copy);\n\n\t\t\tif (original !== null) {\n\t\t\t\tcloned.set(original, copy);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\tcopy.push(clone(value[i], cloned, DEV ? `${path}[${i}]` : path, paths));\n\t\t\t}\n\n\t\t\treturn copy;\n\t\t}\n\n\t\tif (get_prototype_of(value) === object_prototype) {\n\t\t\t/** @type {Snapshot<any>} */\n\t\t\tconst copy = {};\n\t\t\tcloned.set(value, copy);\n\n\t\t\tif (original !== null) {\n\t\t\t\tcloned.set(original, copy);\n\t\t\t}\n\n\t\t\tfor (var key in value) {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcopy[key] = clone(value[key], cloned, DEV ? `${path}.${key}` : path, paths);\n\t\t\t}\n\n\t\t\treturn copy;\n\t\t}\n\n\t\tif (value instanceof Date) {\n\t\t\treturn /** @type {Snapshot<T>} */ (structuredClone(value));\n\t\t}\n\n\t\tif (typeof (/** @type {T & { toJSON?: any } } */ (value).toJSON) === 'function') {\n\t\t\treturn clone(\n\t\t\t\t/** @type {T & { toJSON(): any } } */ (value).toJSON(),\n\t\t\t\tcloned,\n\t\t\t\tDEV ? `${path}.toJSON()` : path,\n\t\t\t\tpaths,\n\t\t\t\t// Associate the instance with the toJSON clone\n\t\t\t\tvalue\n\t\t\t);\n\t\t}\n\t}\n\n\tif (value instanceof EventTarget) {\n\t\t// can't be cloned\n\t\treturn /** @type {Snapshot<T>} */ (value);\n\t}\n\n\ttry {\n\t\treturn /** @type {Snapshot<T>} */ (structuredClone(value));\n\t} catch (e) {\n\t\tif (DEV) {\n\t\t\tpaths.push(path);\n\t\t}\n\n\t\treturn /** @type {Snapshot<T>} */ (value);\n\t}\n}\n","/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect, active_reaction } from '../../runtime.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\tblock(() => {\n\t\tvar collection = get_collection();\n\n\t\tvar array = is_array(collection)\n\t\t\t? collection\n\t\t\t: collection == null\n\t\t\t\t? []\n\t\t\t\t: array_from(collection);\n\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch â€” remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(hydrate_node, state, prev, null, value, key, i, render_fn, flags);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\tvar effect = /** @type {Effect} */ (active_reaction);\n\t\t\treconcile(array, state, anchor, render_fn, flags, (effect.f & INERT) !== 0, get_key);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget_collection();\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>) => void} render_fn\n * @param {number} flags\n * @param {boolean} is_inert\n * @param {(value: V, index: number) => any} get_key\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, is_inert, get_key) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the each block isn't inert and an item has an effect that is already inert,\n\t\t\t\t// skip over adding it to our seen Set as the item is already being handled\n\t\t\t\tif (is_inert || (current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// If the each block isn't inert, then inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif (is_inert || (current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>) => void} render_fn\n * @param {number} flags\n * @returns {EachItem}\n */\nfunction create_item(anchor, state, prev, next, value, key, index, render_fn, flags) {\n\tvar previous_each_item = current_each_item;\n\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\t/** @type {EachItem} */\n\tvar item = {\n\t\ti,\n\t\tv,\n\t\tk: key,\n\t\ta: null,\n\t\t// @ts-expect-error\n\t\te: null,\n\t\tprev,\n\t\tnext\n\t};\n\n\tcurrent_each_item = item;\n\n\ttry {\n\t\titem.e = branch(() => render_fn(anchor, v, i), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n","import { DEV } from 'esm-env';\nimport { hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '../../constants.js';\nimport { queue_idle_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\tif (\n\t\tattributes.value === (attributes.value = value) ||\n\t\t// @ts-expect-error\n\t\t// `progress` elements always need their value set when its `0`\n\t\t(element.value === value && (value !== 0 || element.nodeName !== 'PROGRESS'))\n\t)\n\t\treturn;\n\t// @ts-expect-error\n\telement.value = value;\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (attributes.checked === (attributes.checked = checked)) return;\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'style' && '__styles' in element) {\n\t\t// reset styles to force style: directive to update\n\t\telement.__styles = {};\n\t}\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {any} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\t// We need to ensure that setting custom element props, which can\n\t// invoke lifecycle methods on other custom elements, does not also\n\t// associate those lifecycle methods with the current active reaction\n\t// or effect\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\tif (get_setters(node).includes(prop)) {\n\t\t\tnode[prop] = value;\n\t\t} else {\n\t\t\tset_attribute(node, prop, value);\n\t\t}\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string, any> | undefined} prev\n * @param {Record<string, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [preserve_attribute_case]\n * @param {boolean} [is_custom_element]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(\n\telement,\n\tprev,\n\tnext,\n\tcss_hash,\n\tpreserve_attribute_case = false,\n\tis_custom_element = false,\n\tskip_warning = false\n) {\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (css_hash !== undefined) {\n\t\tnext.class = next.class ? next.class + ' ' + css_hash : css_hash;\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// @ts-expect-error\n\tvar attributes = /** @type {Record<string, unknown>} **/ (element.__attributes ??= {});\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (key === 'style' && value != null) {\n\t\t\telement.style.cssText = value + '';\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (key === '__value' || (key === 'value' && value != null)) {\n\t\t\t// @ts-ignore\n\t\t\telement.value = element[key] = element.__value = value;\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tif (value == null && !is_custom_element) {\n\t\t\t\tattributes[key] = null;\n\t\t\t\telement.removeAttribute(key);\n\t\t\t} else if (setters.includes(name) && (is_custom_element || typeof value !== 'string')) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tif (hydrating && (name === 'src' || name === 'href' || name === 'srcset')) {\n\t\t\t\t\tif (!skip_warning) check_src_in_dev_hydration(element, name, value ?? '');\n\t\t\t\t} else {\n\t\t\t\t\tset_attribute(element, name, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (key === 'style' && '__styles' in element) {\n\t\t\t// reset styles to force style: directive to update\n\t\t\telement.__styles = {};\n\t\t}\n\t}\n\n\treturn current;\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\tvar descriptors;\n\tvar proto = get_prototype_of(element);\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/**\n * @param {HTMLImageElement} element\n * @returns {void}\n */\nexport function handle_lazy_img(element) {\n\t// If we're using an image that has a lazy loading attribute, we need to apply\n\t// the loading and src after the img element has been appended to the document.\n\t// Otherwise the lazy behaviour will not work due to our cloneNode heuristic for\n\t// templates.\n\tif (!hydrating && element.loading === 'lazy') {\n\t\tvar src = element.src;\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = null;\n\t\telement.loading = 'eager';\n\t\telement.removeAttribute('src');\n\t\trequestAnimationFrame(() => {\n\t\t\t// @ts-expect-error\n\t\t\tif (element[LOADING_ATTR_SYMBOL] !== 'eager') {\n\t\t\t\telement.loading = 'lazy';\n\t\t\t}\n\t\t\telement.src = src;\n\t\t});\n\t}\n}\n","import { hydrating } from '../hydration.js';\n\n/**\n * @param {SVGElement} dom\n * @param {string} value\n * @returns {void}\n */\nexport function set_svg_class(dom, value) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value);\n\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\n\t) {\n\t\tif (next_class_name === '') {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.setAttribute('class', next_class_name);\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @param {MathMLElement} dom\n * @param {string} value\n * @returns {void}\n */\nexport function set_mathml_class(dom, value) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value);\n\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\n\t) {\n\t\tif (next_class_name === '') {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.setAttribute('class', next_class_name);\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @param {HTMLElement} dom\n * @param {string} value\n * @returns {void}\n */\nexport function set_class(dom, value) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value);\n\n\tif (hydrating && dom.className === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.className !== next_class_name)\n\t) {\n\t\t// Removing the attribute when the value is only an empty string causes\n\t\t// peformance issues vs simply making the className an empty string. So\n\t\t// we should only remove the class if the the value is nullish.\n\t\tif (value == null) {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.className = next_class_name;\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @template V\n * @param {V} value\n * @returns {string | V}\n */\nfunction to_class(value) {\n\treturn value == null ? '' : value;\n}\n\n/**\n * @param {Element} dom\n * @param {string} class_name\n * @param {boolean} value\n * @returns {void}\n */\nexport function toggle_class(dom, class_name, value) {\n\tif (value) {\n\t\tif (dom.classList.contains(class_name)) return;\n\t\tdom.classList.add(class_name);\n\t} else {\n\t\tif (!dom.classList.contains(class_name)) return;\n\t\tdom.classList.remove(class_name);\n\t}\n}\n","import { DEV } from 'esm-env';\nimport { render_effect, teardown } from '../../../reactivity/effects.js';\nimport { listen_to_event_and_reset_event, without_reactive_context } from './shared.js';\nimport * as e from '../../../errors.js';\nimport { is } from '../../../proxy.js';\nimport { queue_micro_task } from '../../task.js';\nimport { hydrating } from '../../hydration.js';\nimport { is_runes } from '../../../runtime.js';\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_value(input, get, set = get) {\n\tvar runes = is_runes();\n\n\tlisten_to_event_and_reset_event(input, 'input', () => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\t/** @type {unknown} */\n\t\tvar value = is_numberlike_input(input) ? to_number(input.value) : input.value;\n\t\tset(value);\n\n\t\t// In runes mode, respect any validation in accessors (doesn't apply in legacy mode,\n\t\t// because we use mutable state which ensures the render effect always runs)\n\t\tif (runes && value !== (value = get())) {\n\t\t\t// @ts-expect-error the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\t\t}\n\t});\n\n\trender_effect(() => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\tvar value = get();\n\n\t\t// If we are hydrating and the value has since changed, then use the update value\n\t\t// from the input instead.\n\t\tif (hydrating && input.defaultValue !== input.value) {\n\t\t\tset(is_numberlike_input(input) ? to_number(input.value) : input.value);\n\t\t\treturn;\n\t\t}\n\n\t\tif (is_numberlike_input(input) && value === to_number(input.value)) {\n\t\t\t// handles 0 vs 00 case (see https://github.com/sveltejs/svelte/issues/9959)\n\t\t\treturn;\n\t\t}\n\n\t\tif (input.type === 'date' && !value && !input.value) {\n\t\t\t// Handles the case where a temporarily invalid date is set (while typing, for example with a leading 0 for the day)\n\t\t\t// and prevents this state from clearing the other parts of the date input (see https://github.com/sveltejs/svelte/issues/7897)\n\t\t\treturn;\n\t\t}\n\n\t\t// don't set the value of the input if it's the same to allow\n\t\t// minlength to work properly\n\t\tif (value !== input.value) {\n\t\t\t// @ts-expect-error the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\t\t}\n\t});\n}\n\n/** @type {Set<HTMLInputElement[]>} */\nconst pending = new Set();\n\n/**\n * @param {HTMLInputElement[]} inputs\n * @param {null | [number]} group_index\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_group(inputs, group_index, input, get, set = get) {\n\tvar is_checkbox = input.getAttribute('type') === 'checkbox';\n\tvar binding_group = inputs;\n\n\t// needs to be let or related code isn't treeshaken out if it's always false\n\tlet hydration_mismatch = false;\n\n\tif (group_index !== null) {\n\t\tfor (var index of group_index) {\n\t\t\t// @ts-expect-error\n\t\t\tbinding_group = binding_group[index] ??= [];\n\t\t}\n\t}\n\n\tbinding_group.push(input);\n\n\tlisten_to_event_and_reset_event(\n\t\tinput,\n\t\t'change',\n\t\t() => {\n\t\t\t// @ts-ignore\n\t\t\tvar value = input.__value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t}\n\n\t\t\tset(value);\n\t\t},\n\t\t// TODO better default value handling\n\t\t() => set(is_checkbox ? [] : null)\n\t);\n\n\trender_effect(() => {\n\t\tvar value = get();\n\n\t\t// If we are hydrating and the value has since changed, then use the update value\n\t\t// from the input instead.\n\t\tif (hydrating && input.defaultChecked !== input.checked) {\n\t\t\thydration_mismatch = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (is_checkbox) {\n\t\t\tvalue = value || [];\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = value.includes(input.__value);\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = is(input.__value, value);\n\t\t}\n\t});\n\n\tteardown(() => {\n\t\tvar index = binding_group.indexOf(input);\n\n\t\tif (index !== -1) {\n\t\t\tbinding_group.splice(index, 1);\n\t\t}\n\t});\n\n\tif (!pending.has(binding_group)) {\n\t\tpending.add(binding_group);\n\n\t\tqueue_micro_task(() => {\n\t\t\t// necessary to maintain binding group order in all insertion scenarios\n\t\t\tbinding_group.sort((a, b) => (a.compareDocumentPosition(b) === 4 ? -1 : 1));\n\t\t\tpending.delete(binding_group);\n\t\t});\n\t}\n\n\tqueue_micro_task(() => {\n\t\tif (hydration_mismatch) {\n\t\t\tvar value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t} else {\n\t\t\t\tvar hydration_input = binding_group.find((input) => input.checked);\n\t\t\t\t// @ts-ignore\n\t\t\t\tvalue = hydration_input?.__value;\n\t\t\t}\n\n\t\t\tset(value);\n\t\t}\n\t});\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_checked(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', () => {\n\t\tvar value = input.checked;\n\t\tset(value);\n\t});\n\n\tif (get() == undefined) {\n\t\tset(false);\n\t}\n\n\trender_effect(() => {\n\t\tvar value = get();\n\t\tinput.checked = Boolean(value);\n\t});\n}\n\n/**\n * @template V\n * @param {Array<HTMLInputElement>} group\n * @param {V} __value\n * @param {boolean} checked\n * @returns {V[]}\n */\nfunction get_binding_group_value(group, __value, checked) {\n\tvar value = new Set();\n\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) {\n\t\t\t// @ts-ignore\n\t\t\tvalue.add(group[i].__value);\n\t\t}\n\t}\n\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement} input\n */\nfunction is_numberlike_input(input) {\n\tvar type = input.type;\n\treturn type === 'number' || type === 'range';\n}\n\n/**\n * @param {string} value\n */\nfunction to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => FileList | null} get\n * @param {(value: FileList | null) => void} set\n */\nexport function bind_files(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', () => {\n\t\tset(input.files);\n\t});\n\n\trender_effect(() => {\n\t\tinput.files = get();\n\t});\n}\n","import { effect } from '../../../reactivity/effects.js';\nimport { listen_to_event_and_reset_event } from './shared.js';\nimport { untrack } from '../../../runtime.js';\nimport { is } from '../../../proxy.js';\n\n/**\n * Selects the correct option(s) (depending on whether this is a multiple select)\n * @template V\n * @param {HTMLSelectElement} select\n * @param {V} value\n * @param {boolean} [mounting]\n */\nexport function select_option(select, value, mounting) {\n\tif (select.multiple) {\n\t\treturn select_options(select, value);\n\t}\n\n\tfor (var option of select.options) {\n\t\tvar option_value = get_option_value(option);\n\t\tif (is(option_value, value)) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * Selects the correct option(s) if `value` is given,\n * and then sets up a mutation observer to sync the\n * current selection to the dom when it changes. Such\n * changes could for example occur when options are\n * inside an `#each` block.\n * @template V\n * @param {HTMLSelectElement} select\n * @param {() => V} [get_value]\n */\nexport function init_select(select, get_value) {\n\tlet mounting = true;\n\teffect(() => {\n\t\tif (get_value) {\n\t\t\tselect_option(select, untrack(get_value), mounting);\n\t\t}\n\t\tmounting = false;\n\n\t\tvar observer = new MutationObserver(() => {\n\t\t\t// @ts-ignore\n\t\t\tvar value = select.__value;\n\t\t\tselect_option(select, value);\n\t\t\t// Deliberately don't update the potential binding value,\n\t\t\t// the model should be preserved unless explicitly changed\n\t\t});\n\n\t\tobserver.observe(select, {\n\t\t\t// Listen to option element changes\n\t\t\tchildList: true,\n\t\t\tsubtree: true, // because of <optgroup>\n\t\t\t// Listen to option element value attribute changes\n\t\t\t// (doesn't get notified of select value changes,\n\t\t\t// because that property is not reflected as an attribute)\n\t\t\tattributes: true,\n\t\t\tattributeFilter: ['value']\n\t\t});\n\n\t\treturn () => {\n\t\t\tobserver.disconnect();\n\t\t};\n\t});\n}\n\n/**\n * @param {HTMLSelectElement} select\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_select_value(select, get, set = get) {\n\tvar mounting = true;\n\n\tlisten_to_event_and_reset_event(select, 'change', () => {\n\t\t/** @type {unknown} */\n\t\tvar value;\n\n\t\tif (select.multiple) {\n\t\t\tvalue = [].map.call(select.querySelectorAll(':checked'), get_option_value);\n\t\t} else {\n\t\t\t/** @type {HTMLOptionElement | null} */\n\t\t\tvar selected_option = select.querySelector(':checked');\n\t\t\tvalue = selected_option && get_option_value(selected_option);\n\t\t}\n\n\t\tset(value);\n\t});\n\n\t// Needs to be an effect, not a render_effect, so that in case of each loops the logic runs after the each block has updated\n\teffect(() => {\n\t\tvar value = get();\n\t\tselect_option(select, value, mounting);\n\n\t\t// Mounting and value undefined -> take selection from dom\n\t\tif (mounting && value === undefined) {\n\t\t\t/** @type {HTMLOptionElement | null} */\n\t\t\tvar selected_option = select.querySelector(':checked');\n\t\t\tif (selected_option !== null) {\n\t\t\t\tvalue = get_option_value(selected_option);\n\t\t\t\tset(value);\n\t\t\t}\n\t\t}\n\n\t\t// @ts-ignore\n\t\tselect.__value = value;\n\t\tmounting = false;\n\t});\n\n\t// don't pass get_value, we already initialize it in the effect above\n\tinit_select(select);\n}\n\n/**\n * @template V\n * @param {HTMLSelectElement} select\n * @param {V} value\n */\nfunction select_options(select, value) {\n\tfor (var option of select.options) {\n\t\t// @ts-ignore\n\t\toption.selected = ~value.indexOf(get_option_value(option));\n\t}\n}\n\n/** @param {HTMLOptionElement} option */\nfunction get_option_value(option) {\n\t// __value only exists if the <option> has a value attribute\n\tif ('__value' in option) {\n\t\treturn option.__value;\n\t} else {\n\t\treturn option.value;\n\t}\n}\n","/*\r\n  Copyright (c) 2024 Charly Schmidt aka Picorims<picorims.contact@gmail.com>,\r\n\r\n  This Source Code Form is subject to the terms of the Mozilla Public\r\n  License, v. 2.0. If a copy of the MPL was not distributed with this\r\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\r\n*/\r\n\r\nimport type { PenpotEvent, UIEvents } from \"./types/plugin_events\";\r\n\r\nexport function sendMessage(msg: PenpotEvent<UIEvents>) {\r\n    parent.postMessage(msg, '*');\r\n}","/*\r\n  Copyright (c) 2024 Charly Schmidt aka Picorims<picorims.contact@gmail.com>,\r\n\r\n  This Source Code Form is subject to the terms of the Mozilla Public\r\n  License, v. 2.0. If a copy of the MPL was not distributed with this\r\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\r\n*/\r\n\r\nimport type { Pattern_v1, Rule, RuleKind } from '$lib/types/pattern';\r\n\r\n// eslint-disable-next-line prefer-const\r\nexport let pattern = $state<{ proxy: Pattern_v1 }>({\r\n\tproxy: {\r\n\t\t// The default values here are ONLY here to initialize the pattern object.\r\n\t\t// The actual values will be set by the plugin side upon pattern creation.\r\n\t\t// IN OTHER WORDS, CHANGING THESE VALUES WILL NOT CHANGE THE DEFAULTS IN THE PLUGIN.\r\n\t\tcolumns: 0,\r\n\t\trows: 0,\r\n\t\tmode: 'grid',\r\n\t\tradius: 0,\r\n\t\tversion: 1,\r\n\t\trotateAccordingToDirection: false,\r\n\t\trules: []\r\n\t}\r\n});\r\n\r\n// eslint-disable-next-line prefer-const\r\nexport let locked = $state<{ value: boolean }>({ value: false });\r\n// eslint-disable-next-line prefer-const\r\nexport let progressRatio = $state<{ value: number }>({ value: 0 });\r\n\r\nexport function getDefaultRule(kind: RuleKind): Rule {\r\n\tswitch (kind) {\r\n\t\tcase 'randomize':\r\n\t\t\treturn {\r\n\t\t\t\tid: Math.random().toString(36).substring(7), // TODO use UUID\r\n\t\t\t\ttype: 'randomize',\r\n\t\t\t\tname: 'Randomize',\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tproperty: 'x',\r\n\t\t\t\tfrom: 0,\r\n\t\t\t\tto: 0\r\n\t\t\t};\r\n\t\tcase 'offset':\r\n\t\t\treturn {\r\n\t\t\t\tid: Math.random().toString(36).substring(7), // TODO use UUID\r\n\t\t\t\tname: 'Offset',\r\n\t\t\t\ttype: 'offset',\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tproperty: 'x',\r\n\t\t\t\toffset: 0,\r\n\t\t\t\taccumulate: false\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unknown rule kind: ${kind}`);\r\n\t}\r\n}\r\n","/*\r\n  Copyright (c) 2024 Charly Schmidt aka Picorims<picorims.contact@gmail.com>,\r\n\r\n  This Source Code Form is subject to the terms of the Mozilla Public\r\n  License, v. 2.0. If a copy of the MPL was not distributed with this\r\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\r\n*/\r\n\r\nexport enum PluginEvents {\r\n\tNO_SELECTION = 'no-selection',\r\n\tONE_SELECTION = 'one-selection',\r\n\tMULTIPLE_SELECTION = 'multiple-selection',\r\n\tPATTERN_SELECTED = 'pattern-selected',\r\n  PONG = 'pong',\r\n  ERROR = 'error',\r\n  SEND_PATTERN = 'send-pattern',\r\n  ACKNOWLEDGE_UPDATE_PATTERN = 'acknowledge-update-pattern',\r\n  SEND_PROGRESSION = 'send-progression',\r\n}\r\n\r\nexport enum UIEvents {\r\n  PING = 'ping',\r\n\tCREATE_PATTERN = 'create-pattern',\r\n  REQUEST_CURRENT_PATTERN = 'request-current-pattern',\r\n  UPDATE_PATTERN = 'update-pattern',\r\n}\r\n\r\n/**\r\n * Generic event type allows to handle enums both declared\r\n * here and in plugin (copies).\r\n */\r\nexport interface PenpotEvent<T extends string> {\r\n  type: T;\r\n  content?: object;\r\n}\r\n\r\n// TODO use conditional types for stronger typing of events","<script lang=\"ts\">\r\n\t/*\r\n      Copyright (c) 2024 Charly Schmidt aka Picorims<picorims.contact@gmail.com>,\r\n    \r\n      This Source Code Form is subject to the terms of the Mozilla Public\r\n      License, v. 2.0. If a copy of the MPL was not distributed with this\r\n      file, You can obtain one at http://mozilla.org/MPL/2.0/.\r\n    */\r\n\r\n\tlet {\r\n\t\tchecked = $bindable(),\r\n\t\tid,\r\n\t\tlabel\r\n\t}: { checked: boolean; id: string; label: string } = $props();\r\n</script>\r\n\r\n<div class=\"checkbox-container\">\r\n\t<input class=\"checkbox-input\" type=\"checkbox\" {id} value={id} bind:checked />\r\n\t<label for={id} class=\"body-small\">{label}</label>\r\n</div>\r\n\r\n<style>\r\n    .checkbox-container {\r\n        margin-bottom: var(--spacing-16);\r\n    }\r\n</style>","<script lang=\"ts\">\r\n\t/*\r\n      Copyright (c) 2024 Charly Schmidt aka Picorims<picorims.contact@gmail.com>,\r\n    \r\n      This Source Code Form is subject to the terms of the Mozilla Public\r\n      License, v. 2.0. If a copy of the MPL was not distributed with this\r\n      file, You can obtain one at http://mozilla.org/MPL/2.0/.\r\n    */\r\n\r\n\tlet { variant, message }: { variant: 'info' | 'success' | 'error' | 'warning'; message: string } =\r\n\t\t$props();\r\n</script>\r\n\r\n<div\r\n\tclass=\"container\"\r\n\tclass:info={variant === 'info'}\r\n\tclass:success={variant === 'success'}\r\n\tclass:error={variant === 'error'}\r\n\tclass:warning={variant === 'warning'}\r\n>\r\n\t<strong>{variant}:</strong>\r\n\t{message}\r\n</div>\r\n\r\n<style>\r\n\tdiv.container {\r\n\t\tborder-radius: var(--spacing-4);\r\n\t\tpadding: var(--spacing-8);\r\n\t}\r\n\tdiv.container.success {\r\n\t\tcolor: var(--success-50);\r\n\t\tbackground-color: (--success-950);\r\n\t\tborder: 1px solid var(--success-500);\r\n\t}\r\n\tdiv.container.error {\r\n\t\tcolor: var(--error-50);\r\n\t\tbackground-color: (--error-950);\r\n\t\tborder: 1px solid var(--error-500);\r\n\t}\r\n\tdiv.container.warning {\r\n\t\tcolor: var(--warning-50);\r\n\t\tbackground-color: (--warning-950);\r\n\t\tborder: 1px solid var(--warning-500);\r\n\t}\r\n\tdiv.container.info {\r\n\t\tcolor: var(--info-50);\r\n\t\tbackground-color: (--info-950);\r\n\t\tborder: 1px solid var(--info-500);\r\n\t}\r\n</style>\r\n","import { HttpError, Redirect, ActionFailure } from '../runtime/control.js';\nimport { BROWSER, DEV } from 'esm-env';\n\nexport { VERSION } from '../version.js';\n\n// TODO 3.0: remove these types as they are not used anymore (we can't remove them yet because that would be a breaking change)\n/**\n * @template {number} TNumber\n * @template {any[]} [TArray=[]]\n * @typedef {TNumber extends TArray['length'] ? TArray[number] : LessThan<TNumber, [...TArray, TArray['length']]>} LessThan\n */\n\n/**\n * @template {number} TStart\n * @template {number} TEnd\n * @typedef {Exclude<TEnd | LessThan<TEnd>, LessThan<TStart>>} NumericRange\n */\n\n// Keep the status codes as `number` because restricting to certain numbers makes it unnecessarily hard to use compared to the benefits\n// (we have runtime errors already to check for invalid codes). Also see https://github.com/sveltejs/kit/issues/11780\n\n// we have to repeat the JSDoc because the display for function overloads is broken\n// see https://github.com/microsoft/TypeScript/issues/55056\n\n/**\n * Throws an error with a HTTP status code and an optional message.\n * When called during request handling, this will cause SvelteKit to\n * return an error response without invoking `handleError`.\n * Make sure you're not catching the thrown error, which would prevent SvelteKit from handling it.\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @param {App.Error} body An object that conforms to the App.Error type. If a string is passed, it will be used as the message property.\n * @overload\n * @param {number} status\n * @param {App.Error} body\n * @return {never}\n * @throws {HttpError} This error instructs SvelteKit to initiate HTTP error handling.\n * @throws {Error} If the provided status is invalid (not between 400 and 599).\n */\n/**\n * Throws an error with a HTTP status code and an optional message.\n * When called during request handling, this will cause SvelteKit to\n * return an error response without invoking `handleError`.\n * Make sure you're not catching the thrown error, which would prevent SvelteKit from handling it.\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @param {{ message: string } extends App.Error ? App.Error | string | undefined : never} [body] An object that conforms to the App.Error type. If a string is passed, it will be used as the message property.\n * @overload\n * @param {number} status\n * @param {{ message: string } extends App.Error ? App.Error | string | undefined : never} [body]\n * @return {never}\n * @throws {HttpError} This error instructs SvelteKit to initiate HTTP error handling.\n * @throws {Error} If the provided status is invalid (not between 400 and 599).\n */\n/**\n * Throws an error with a HTTP status code and an optional message.\n * When called during request handling, this will cause SvelteKit to\n * return an error response without invoking `handleError`.\n * Make sure you're not catching the thrown error, which would prevent SvelteKit from handling it.\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @param {{ message: string } extends App.Error ? App.Error | string | undefined : never} body An object that conforms to the App.Error type. If a string is passed, it will be used as the message property.\n * @return {never}\n * @throws {HttpError} This error instructs SvelteKit to initiate HTTP error handling.\n * @throws {Error} If the provided status is invalid (not between 400 and 599).\n */\nexport function error(status, body) {\n\tif ((!BROWSER || DEV) && (isNaN(status) || status < 400 || status > 599)) {\n\t\tthrow new Error(`HTTP error status codes must be between 400 and 599 â€” ${status} is invalid`);\n\t}\n\n\tthrow new HttpError(status, body);\n}\n\n/**\n * Checks whether this is an error thrown by {@link error}.\n * @template {number} T\n * @param {unknown} e\n * @param {T} [status] The status to filter for.\n * @return {e is (HttpError & { status: T extends undefined ? never : T })}\n */\nexport function isHttpError(e, status) {\n\tif (!(e instanceof HttpError)) return false;\n\treturn !status || e.status === status;\n}\n\n/**\n * Redirect a request. When called during request handling, SvelteKit will return a redirect response.\n * Make sure you're not catching the thrown redirect, which would prevent SvelteKit from handling it.\n * @param {300 | 301 | 302 | 303 | 304 | 305 | 306 | 307 | 308 | ({} & number)} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#redirection_messages). Must be in the range 300-308.\n * @param {string | URL} location The location to redirect to.\n * @throws {Redirect} This error instructs SvelteKit to redirect to the specified location.\n * @throws {Error} If the provided status is invalid.\n * @return {never}\n */\nexport function redirect(status, location) {\n\tif ((!BROWSER || DEV) && (isNaN(status) || status < 300 || status > 308)) {\n\t\tthrow new Error('Invalid status code');\n\t}\n\n\tthrow new Redirect(\n\t\t// @ts-ignore\n\t\tstatus,\n\t\tlocation.toString()\n\t);\n}\n\n/**\n * Checks whether this is a redirect thrown by {@link redirect}.\n * @param {unknown} e The object to check.\n * @return {e is Redirect}\n */\nexport function isRedirect(e) {\n\treturn e instanceof Redirect;\n}\n\n/**\n * Create a JSON `Response` object from the supplied data.\n * @param {any} data The value that will be serialized as JSON.\n * @param {ResponseInit} [init] Options such as `status` and `headers` that will be added to the response. `Content-Type: application/json` and `Content-Length` headers will be added automatically.\n */\nexport function json(data, init) {\n\t// TODO deprecate this in favour of `Response.json` when it's\n\t// more widely supported\n\tconst body = JSON.stringify(data);\n\n\t// we can't just do `text(JSON.stringify(data), init)` because\n\t// it will set a default `content-type` header. duplicated code\n\t// means less duplicated work\n\tconst headers = new Headers(init?.headers);\n\tif (!headers.has('content-length')) {\n\t\theaders.set('content-length', encoder.encode(body).byteLength.toString());\n\t}\n\n\tif (!headers.has('content-type')) {\n\t\theaders.set('content-type', 'application/json');\n\t}\n\n\treturn new Response(body, {\n\t\t...init,\n\t\theaders\n\t});\n}\n\nconst encoder = new TextEncoder();\n\n/**\n * Create a `Response` object from the supplied body.\n * @param {string} body The value that will be used as-is.\n * @param {ResponseInit} [init] Options such as `status` and `headers` that will be added to the response. A `Content-Length` header will be added automatically.\n */\nexport function text(body, init) {\n\tconst headers = new Headers(init?.headers);\n\tif (!headers.has('content-length')) {\n\t\tconst encoded = encoder.encode(body);\n\t\theaders.set('content-length', encoded.byteLength.toString());\n\t\treturn new Response(encoded, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\treturn new Response(body, {\n\t\t...init,\n\t\theaders\n\t});\n}\n\n/**\n * Create an `ActionFailure` object.\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @overload\n * @param {number} status\n * @returns {import('./public.js').ActionFailure<undefined>}\n */\n/**\n * Create an `ActionFailure` object.\n * @template {Record<string, unknown> | undefined} [T=undefined]\n * @param {number} status The [HTTP status code](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#client_error_responses). Must be in the range 400-599.\n * @param {T} data Data associated with the failure (e.g. validation errors)\n * @overload\n * @param {number} status\n * @param {T} data\n * @returns {import('./public.js').ActionFailure<T>}\n */\n/**\n * Create an `ActionFailure` object.\n * @param {number} status\n * @param {any} [data]\n * @returns {import('./public.js').ActionFailure<any>}\n */\nexport function fail(status, data) {\n\t// @ts-expect-error unique symbol missing\n\treturn new ActionFailure(status, data);\n}\n\n/**\n * Checks whether this is an action failure thrown by {@link fail}.\n * @param {unknown} e The object to check.\n * @return {e is import('./public.js').ActionFailure}\n */\nexport function isActionFailure(e) {\n\treturn e instanceof ActionFailure;\n}\n","<script lang=\"ts\">\r\n\timport { error } from \"@sveltejs/kit\";\r\n\r\n\t/*\r\n      Copyright (c) 2024 Charly Schmidt aka Picorims<picorims.contact@gmail.com>,\r\n    \r\n      This Source Code Form is subject to the terms of the Mozilla Public\r\n      License, v. 2.0. If a copy of the MPL was not distributed with this\r\n      file, You can obtain one at http://mozilla.org/MPL/2.0/.\r\n    */\r\n\r\n\tlet {\r\n\t\tvalue = $bindable(),\r\n\t\tid,\r\n\t\tlabel,\r\n\t\tmin,\r\n\t\tmax,\r\n\t\tstep\r\n\t}: {\r\n\t\tvalue: number;\r\n\t\tid: string;\r\n\t\tlabel: string;\r\n\t\tmin?: number;\r\n\t\tmax?: number;\r\n\t\tstep?: number;\r\n\t} = $props();\r\n\r\n    let invalidBounds = $state(false);\r\n\r\n    function checkBounds() {\r\n        invalidBounds = false;\r\n        if (min && value < min) {\r\n            invalidBounds = true;\r\n        }\r\n        if (max && value > max) {\r\n            invalidBounds = true;\r\n        }\r\n    }\r\n</script>\r\n\r\n<div class=\"input-container\">\r\n\t<label class=\"input-label\" for={id}>{label}</label>\r\n\t<input\r\n\t\tclass=\"input\"\r\n        class:error={invalidBounds}\r\n\t\ttype=\"number\"\r\n\t\t{id}\r\n\t\t{min}\r\n\t\t{max}\r\n\t\t{step}\r\n\t\tbind:value\r\n        oninput={checkBounds}\r\n\t/>\r\n</div>\r\n\r\n<style>\r\n\tdiv.input-container {\r\n\t\tmargin-bottom: var(--spacing-16);\r\n\t}\r\n\r\n    label.input-label {\r\n\t\tdisplay: block;\r\n\t\tmargin-bottom: var(--spacing-4);\r\n\t\tcolor: var(--df-secondary);\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { error } from \"@sveltejs/kit\";\r\n\r\n\t/*\r\n      Copyright (c) 2024 Charly Schmidt aka Picorims<picorims.contact@gmail.com>,\r\n    \r\n      This Source Code Form is subject to the terms of the Mozilla Public\r\n      License, v. 2.0. If a copy of the MPL was not distributed with this\r\n      file, You can obtain one at http://mozilla.org/MPL/2.0/.\r\n    */\r\n\r\n\tlet {\r\n\t\tvalue = $bindable(),\r\n\t\tid,\r\n\t\tlabel,\r\n\t\tregex\r\n\t}: {\r\n\t\tvalue: string;\r\n\t\tid: string;\r\n\t\tlabel: string;\r\n\t\tregex?: RegExp;\r\n\t} = $props();\r\n\r\n    let invalidBounds = $state(false);\r\n\r\n    function checkBounds() {\r\n\t\tif (!regex) {\r\n\t\t\tinvalidBounds = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (value === null) { // TODO refactor if optional strings should be supported\r\n\t\t\tinvalidBounds = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst regexInstance = new RegExp(regex);\r\n\t\tif (!regexInstance.test(value.toString())) {\r\n\t\t\tinvalidBounds = true;\r\n\t\t} else {\r\n\t\t\tinvalidBounds = false;\r\n\t\t}\r\n    }\r\n</script>\r\n\r\n<div class=\"input-container\">\r\n\t<label class=\"input-label\" for={id}>{label}</label>\r\n\t<input\r\n\t\tclass=\"input\"\r\n        class:error={invalidBounds}\r\n\t\ttype=\"text\"\r\n\t\t{id}\r\n\t\tpattern={regex?.source}\r\n\t\tbind:value\r\n        oninput={checkBounds}\r\n\t/>\r\n</div>\r\n\r\n<style>\r\n\tdiv.input-container {\r\n\t\tmargin-bottom: var(--spacing-16);\r\n\t}\r\n\r\n    label.input-label {\r\n\t\tdisplay: block;\r\n\t\tmargin-bottom: var(--spacing-4);\r\n\t\tcolor: var(--df-secondary);\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\t/*\r\n      Copyright (c) 2024 Charly Schmidt aka Picorims<picorims.contact@gmail.com>,\r\n    \r\n      This Source Code Form is subject to the terms of the Mozilla Public\r\n      License, v. 2.0. If a copy of the MPL was not distributed with this\r\n      file, You can obtain one at http://mozilla.org/MPL/2.0/.\r\n    */\r\n\r\n\timport { getDefaultRule, pattern } from '$lib/stores/pattern_store.svelte';\r\n\timport type { OffsetRule, RandomRule, Rule, RuleKind } from '$lib/types/pattern';\r\n\timport Checkbox from './atoms/Checkbox.svelte';\r\n\timport NumberInput from './atoms/NumberInput.svelte';\r\n\timport StringInput from './atoms/StringInput.svelte';\r\n\r\n\tlet selectedRule: RuleKind = $state('randomize');\r\n\r\n\tfunction addRule() {\r\n\t\tpattern.proxy.rules.push(getDefaultRule(selectedRule));\r\n\t}\r\n</script>\r\n\r\n<div class=\"add-rule-container\">\r\n\t<p>\r\n\t\t<strong>Note:</strong> The plugin is currently unable to adjust the frame size based on rules. Disabling\r\n\t\tclipping might be necessary to see the full pattern. You can also manually resize the frame, although\r\n\t\tcurrently this will be overridden every time you apply changes.\r\n\t</p>\r\n\t<select id=\"pattern-type\" class=\"select\" bind:value={selectedRule}>\r\n\t\t<option value=\"randomize\">Randomize</option>\r\n\t\t<option value=\"offset\">Offset</option>\r\n\t</select>\r\n\t<button type=\"button\" data-appearance=\"primary\" onclick={addRule}>Add Rule</button>\r\n</div>\r\n\r\n<div class=\"rule-list\">\r\n\t{#each pattern.proxy.rules as rule, i}\r\n\t\t<details class=\"rule\">\r\n\t\t\t<summary>\r\n\t\t\t\t<span class=\"headline-m\">{rule.type}</span>\r\n\t\t\t\t<span class=\"body-m\">{rule.name}</span>\r\n\t\t\t</summary>\r\n\r\n\t\t\t<div class=\"details-content\">\r\n\t\t\t\t<Checkbox id={`rule-${i}-enabled`} label=\"Enabled\" bind:checked={rule.enabled} />\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tdata-appearance=\"primary\"\r\n\t\t\t\t\tonclick={() => {\r\n\t\t\t\t\t\tif (i === 0) return;\r\n\t\t\t\t\t\tconst temp = pattern.proxy.rules[i];\r\n\t\t\t\t\t\tpattern.proxy.rules[i] = pattern.proxy.rules[i - 1];\r\n\t\t\t\t\t\tpattern.proxy.rules[i - 1] = temp;\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdisabled={i === 0}>Move Up</button\r\n\t\t\t\t>\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tdata-appearance=\"primary\"\r\n\t\t\t\t\tonclick={() => {\r\n\t\t\t\t\t\tif (i === pattern.proxy.rules.length - 1) return;\r\n\t\t\t\t\t\tconst temp = pattern.proxy.rules[i];\r\n\t\t\t\t\t\tpattern.proxy.rules[i] = pattern.proxy.rules[i + 1];\r\n\t\t\t\t\t\tpattern.proxy.rules[i + 1] = temp;\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdisabled={i === pattern.proxy.rules.length - 1}>Move Down</button\r\n\t\t\t\t>\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tdata-appearance=\"primary\"\r\n\t\t\t\t\tdata-variant=\"destructive\"\r\n\t\t\t\t\tonclick={() => {\r\n\t\t\t\t\t\tconst confirm = window.confirm('Are you sure you want to remove this rule?');\r\n\t\t\t\t\t\tif (confirm) {\r\n\t\t\t\t\t\t\tpattern.proxy.rules.splice(i, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}>Remove</button\r\n\t\t\t\t>\r\n\r\n\t\t\t\t<StringInput\r\n\t\t\t\t\tid={`rule-${i}-name`}\r\n\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\tregex={new RegExp(/^[A-Za-z0-9 _]+$/g)}\r\n\t\t\t\t\tbind:value={rule.name}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{#if rule.type === 'randomize'}\r\n\t\t\t\t\t{@render randomizeRule(rule, i)}\r\n\t\t\t\t{:else if rule.type === 'offset'}\r\n\t\t\t\t\t{@render offsetRule(rule, i)}\r\n\t\t\t\t{/if}\r\n\t\t\t</div>\r\n\t\t</details>\r\n\t{/each}\r\n</div>\r\n\r\n{#snippet randomizeRule(rule: RandomRule, i: number)}\r\n\t<select id={`rule-${i}-property`} class=\"select\" bind:value={rule.property}>\r\n\t\t<option value=\"x\">X</option>\r\n\t\t<option value=\"y\">Y</option>\r\n\t\t<option value=\"width\">Width</option>\r\n\t\t<option value=\"height\">Height</option>\r\n\t\t<option value=\"rotation\">Rotation</option>\r\n\t</select>\r\n\t<p>\r\n\t\tA negative value allow to go below the initial value, while a positive value allows to go above\r\n\t\tthe initial value. Min and Max are determined by the lowest and highest value provided below.\r\n\t</p>\r\n\t<NumberInput id={`rule-${i}-from`} label=\"From\" bind:value={rule.from} />\r\n\t<NumberInput id={`rule-${i}-to`} label=\"To\" bind:value={rule.to} />\r\n{/snippet}\r\n\r\n{#snippet offsetRule(rule: OffsetRule, i: number)}\r\n\t<p>\r\n\t\t<strong>Note:</strong> This rule currently has no effect on revolution mode.\r\n\t</p>\r\n\t<label for={`rule-${i}-property`}>Property</label>\r\n\t<select id={`rule-${i}-property`} class=\"select\" bind:value={rule.property}>\r\n\t\t<option value=\"x\">X</option>\r\n\t\t<option value=\"y\">Y</option>\r\n\t</select>\r\n\t<p>\r\n\t\tA negative value will move the element to the left or up, while a positive value will move the\r\n\t\telement to the right or down.\r\n\t</p>\r\n\t<NumberInput id={`rule-${i}-offset`} label=\"Offset\" bind:value={rule.offset} />\r\n\t<p>\r\n\t\tAccumulation means that all previous offsets are added to the current offset. Disable this\r\n\t\toption if you want consistent offsets (applied by this rule).\r\n\t</p>\r\n\t<Checkbox id={`rule-${i}-accumulate`} label=\"Accumulate\" bind:checked={rule.accumulate} />\r\n{/snippet}\r\n\r\n<style>\r\n\tdiv.add-rule-container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: var(--spacing-16);\r\n\t\tmargin-bottom: var(--spacing-16);\r\n\t}\r\n\tdiv.rule-list {\r\n\t\tmargin-bottom: var(--spacing-16);\r\n\t}\r\n\tdetails.rule > summary {\r\n\t\tcursor: pointer;\r\n\t\t> span {\r\n\t\t\tmargin: 0;\r\n\t\t\tmax-width: 80%;\r\n\t\t}\r\n\t}\r\n\tdetails.rule > div.details-content {\r\n\t\tpadding-left: var(--spacing-16);\r\n\t\tpadding-top: var(--spacing-8);\r\n\t\tborder-left: 1px solid var(--df-secondary);\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\t/*\r\n      Copyright (c) 2024 Charly Schmidt aka Picorims<picorims.contact@gmail.com>,\r\n    \r\n      This Source Code Form is subject to the terms of the Mozilla Public\r\n      License, v. 2.0. If a copy of the MPL was not distributed with this\r\n      file, You can obtain one at http://mozilla.org/MPL/2.0/.\r\n    */\r\n\r\n\timport { sendMessage } from '$lib/plugin_utils';\r\n\timport { locked, pattern, progressRatio } from '$lib/stores/pattern_store.svelte';\r\n\timport { UIEvents } from '$lib/types/plugin_events';\r\n\timport Checkbox from './atoms/Checkbox.svelte';\r\n\timport InfoBlock from './atoms/InfoBlock.svelte';\r\n\timport NumberInput from './atoms/NumberInput.svelte';\r\n\timport RulesManager from './RulesManager.svelte';\r\n\r\n\tfunction apply(e: Event) {\r\n\t\te.preventDefault();\r\n\t\tconst snapshot = $state.snapshot(pattern.proxy);\r\n\t\tconsole.log('pattern changed', snapshot);\r\n\t\tlocked.value = true;\r\n\t\tsendMessage({ type: UIEvents.UPDATE_PATTERN, content: snapshot });\r\n\t}\r\n\r\n\tfunction copyToClipboard() {\r\n\t\tconst str = JSON.stringify(pattern.proxy);\r\n\t\tnavigator.clipboard.writeText(str);\r\n\t\talert('Pattern copied to clipboard');\r\n\t}\r\n</script>\r\n\r\n<h2 class=\"title-m\">Pattern editor</h2>\r\n\r\n<p>\r\n\t<strong>Note:</strong> Changes take effect after pressing on the \"Apply\" button.\r\n</p>\r\n\r\n<form class=\"form-group container\" onsubmit={apply}>\r\n\t<label class=\"select-label\" for=\"pattern-type\">Pattern type</label>\r\n\t<select id=\"pattern-type\" class=\"select\" bind:value={pattern.proxy.mode}>\r\n\t\t<option value=\"grid\">Grid</option>\r\n\t\t<option value=\"revolution\">Revolution</option>\r\n\t</select>\r\n\r\n\t<NumberInput id=\"pattern-rows\" label=\"Rows\" min={1} bind:value={pattern.proxy.rows} />\r\n\t<NumberInput id=\"pattern-columns\" label=\"Columns\" min={1} bind:value={pattern.proxy.columns} />\r\n\r\n\t{#if pattern.proxy.rows * pattern.proxy.columns > 200}\r\n\t\t<InfoBlock\r\n\t\t\tvariant=\"warning\"\r\n\t\t\tmessage={`The pattern has ${pattern.proxy.rows * pattern.proxy.columns} items, it may slow down the plugin and Penpot.`}\r\n\t\t/>\r\n\t{/if}\r\n\r\n\t{#if pattern.proxy.mode === 'revolution'}\r\n\t\t<NumberInput id=\"pattern-radius\" label=\"Radius\" min={1} bind:value={pattern.proxy.radius} />\r\n\t\t<Checkbox\r\n\t\t\tid=\"pattern-type\"\r\n\t\t\tbind:checked={pattern.proxy.rotateAccordingToDirection}\r\n\t\t\tlabel={'Rotate according to direction'}\r\n\t\t/>\r\n\t{/if}\r\n\r\n\t<h2 class=\"title-m\">Rules</h2>\r\n\t<RulesManager />\r\n\r\n\t<hr />\r\n\r\n\t<button type=\"submit\" data-appearance=\"primary\" disabled={locked.value}>Apply</button>\r\n\t{#if locked.value}\r\n\t\t<p>Loading... {Math.floor(progressRatio.value * 100)}%</p>\r\n\t{/if}\r\n</form>\r\n\r\n<h2 class=\"title-m\">Debugging information</h2>\r\n\r\n<button type=\"button\" data-appearance=\"secondary\" onclick={copyToClipboard}\r\n\t>Copy to clipboard</button\r\n>\r\n<pre>{JSON.stringify(pattern.proxy).replaceAll(',', ', ')}</pre>\r\n\r\n<style>\r\n\tform.container {\r\n\t\twidth: 100%;\r\n\t}\r\n\th2 {\r\n\t\tmargin-bottom: var(--spacing-16);\r\n\t\tfont-weight: bold;\r\n\t\tcolor: var(--da-quaternary);\r\n\t}\r\n\r\n\t:global(p, button, select) {\r\n\t\tmargin-bottom: var(--spacing-16);\r\n\t}\r\n\r\n\tlabel.select-label {\r\n\t\tdisplay: block;\r\n\t\tmargin-bottom: var(--spacing-4);\r\n\t\tcolor: var(--df-secondary);\r\n\t}\r\n\r\n\tpre {\r\n\t\twidth: 100%;\r\n\t\twhite-space: pre-wrap;\r\n\t\tword-break: keep-all;\r\n\t\toverflow: hidden;\r\n\t\tbackground-color: var(--db-secondary);\r\n\t\tborder: 1px solid var(--db-tertiary);\r\n\t\tpadding: var(--spacing-16);\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport PatternEditor from '$lib/components/PatternEditor.svelte';\r\n\timport { sendMessage } from '$lib/plugin_utils';\r\n\timport { locked, pattern, progressRatio } from '$lib/stores/pattern_store.svelte';\r\n\timport type { Pattern_v1 } from '$lib/types/pattern';\r\n\timport { PluginEvents, UIEvents, type PenpotEvent } from '$lib/types/plugin_events';\r\n\t/*\r\n  Copyright (c) 2024 Charly Schmidt aka Picorims<picorims.contact@gmail.com>,\r\n  \r\n  This Source Code Form is subject to the terms of the Mozilla Public\r\n  License, v. 2.0. If a copy of the MPL was not distributed with this\r\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\r\n  */\r\n\r\n\timport { onDestroy, onMount } from 'svelte';\r\n\r\n\tlet selectionKind: 'one' | 'none' | 'multiple' | 'pattern' = $state('none');\r\n\tlet lockSendingPattern = $state(false);\r\n\tlet container: HTMLDivElement;\r\n\r\n\tfunction sendPing() {\r\n\t\tparent.postMessage(UIEvents.PING, '*');\r\n\t}\r\n\r\n\tfunction messageHandler(event: MessageEvent) {\r\n\t\tconst e = event.data as PenpotEvent<PluginEvents | UIEvents>;\r\n\t\tif (e.type === PluginEvents.MULTIPLE_SELECTION) {\r\n\t\t\tselectionKind = 'multiple';\r\n\t\t} else if (e.type === PluginEvents.ONE_SELECTION) {\r\n\t\t\tselectionKind = 'one';\r\n\t\t} else if (e.type === PluginEvents.NO_SELECTION) {\r\n\t\t\tselectionKind = 'none';\r\n\t\t} else if (e.type === PluginEvents.PATTERN_SELECTED) {\r\n\t\t\tselectionKind = 'pattern';\r\n\t\t\tsendMessage({ type: UIEvents.REQUEST_CURRENT_PATTERN });\r\n\t\t} else if (e.type === PluginEvents.SEND_PATTERN) {\r\n\t\t\tconst receivedPattern = e.content;\r\n\t\t\tif (!receivedPattern) {\r\n\t\t\t\tthrow new Error('Pattern creation failed');\r\n\t\t\t}\r\n\t\t\tlockSendingPattern = true;\r\n\t\t\tpattern.proxy = receivedPattern as Pattern_v1;\r\n\t\t} else if (e.type === PluginEvents.ACKNOWLEDGE_UPDATE_PATTERN) {\r\n\t\t\tlocked.value = false;\r\n\t\t\tprogressRatio.value = 1;\r\n\t\t} else if (e.type === PluginEvents.PONG) {\r\n\t\t\tconsole.log('pong');\r\n\t\t} else if (e.type === PluginEvents.SEND_PROGRESSION) {\r\n\t\t\tconst v = e.content; // TODO cleaner type handling\r\n\t\t\tif (!v) {\r\n\t\t\t\tthrow new Error('Progression value is missing');\r\n\t\t\t}\r\n\t\t\tprogressRatio.value = (v as {ratio: number}).ratio;\r\n\t\t} else if (e.type === PluginEvents.ERROR) {\r\n\t\t\tconsole.error('plugin error', e.content);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Unknown event type: ' + e.type);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction createPattern() {\r\n\t\tsendMessage({ type: UIEvents.CREATE_PATTERN });\r\n\t}\r\n\r\n\tonMount(() => {\r\n\t\t// switch to light theme if the user prefers so:\r\n\t\tif (window.matchMedia('(prefers-color-scheme: light)').matches) {\r\n\t\t\tcontainer?.setAttribute('data-theme', 'light');\r\n\t\t}\r\n\t\twindow.addEventListener('message', messageHandler);\r\n\t});\r\n\t// TODO figure out why it throws an error\r\n\t// onDestroy(() => {\r\n\t//   if (window) window.removeEventListener(\"message\", messageHandler);\r\n\t// })\r\n</script>\r\n\r\n<div class=\"container\" data-theme=\"dark\" bind:this={container}>\r\n\t<h1 class=\"title-l\">Tiling Utility</h1>\r\n\t{#if selectionKind === 'none'}\r\n\t\t<p class=\"body-l\">To begin, select an element from which you would like to create a tiling.</p>\r\n\t\t<p class=\"body-l\">Alternatively, select an existing pattern to modify it.</p>\r\n\t{:else if selectionKind === 'multiple'}\r\n\t\t<p class=\"body-l\">Please only select one element at a time.</p>\r\n\t{:else if selectionKind === 'one'}\r\n\t\t<p class=\"body-l\">This element can be a pattern source (a copy will be made).</p>\r\n\t\t<button type=\"button\" data-appearance=\"primary\" onclick={createPattern}>Create pattern</button>\r\n\t{:else if selectionKind === 'pattern'}\r\n\t\t<PatternEditor />\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\tdiv.container {\r\n\t\twidth: 100vw;\r\n\t\theight: 100vh;\r\n\t\tpadding: var(--spacing-24) 0;\r\n\t\tbackground-color: var(--db-primary);\r\n\t\tcolor: var(--df-primary);\r\n\t}\r\n\r\n\th1 {\r\n\t\tmargin-bottom: var(--spacing-16);\r\n\t\tfont-weight: bold;\r\n\t\tcolor: var(--da-tertiary);\r\n\t}\r\n\tp {\r\n\t\tmargin-bottom: var(--spacing-16);\r\n\t}\r\n</style>\r\n"],"names":["empty","snapshot","value","skip_warning","clone","cloned","path","paths","original","unwrapped","is_array","copy","i","get_prototype_of","object_prototype","key","index","_","pause_effects","state","items","controlled_anchor","items_map","transitions","length","pause_children","is_controlled","parent_node","clear_text_content","link","run_out_transitions","item","destroy_effect","each","node","flags","get_collection","get_key","render_fn","fallback_fn","anchor","hydrating","set_hydrate_node","get_first_child","create_text","hydrate_next","fallback","was_empty","block","collection","array","array_from","mismatch","is_else","HYDRATION_START_ELSE","remove_nodes","set_hydrating","prev","hydrate_node","HYDRATION_END","create_item","effect","active_reaction","reconcile","INERT","resume_effect","branch","pause_effect","is_inert","first","current","seen","matched","stashed","child_anchor","update_item","start","j","a","b","move","to_destroy","destroy_length","active_effect","type","internal_set","next","reactive","EACH_ITEM_REACTIVE","mutable","EACH_ITEM_IMMUTABLE","v","mutable_source","source","EACH_INDEX_REACTIVE","end","dest","next_node","get_next_sibling","remove_input_defaults","input","already_removed","remove_defaults","set_attribute","checked","queue_idle_task","add_form_reset_listener","element","attribute","attributes","LOADING_ATTR_SYMBOL","get_setters","setters_cache","setters","descriptors","proto","element_proto","get_descriptors","toggle_class","dom","class_name","bind_value","get","set","runes","is_runes","listen_to_event_and_reset_event","is_numberlike_input","to_number","render_effect","bind_checked","select_option","select","mounting","select_options","option","option_value","get_option_value","is","init_select","get_value","observer","bind_select_value","selected_option","sendMessage","msg","pattern","locked","$.proxy","progressRatio","getDefaultRule","kind","PluginEvents","UIEvents","$.prop","$$props","checkBounds","invalidBounds","$.set","randomizeRule","$$anchor","rule","$.noop","$$value","$.bind_select_value","offsetRule","select_1","selectedRule","addRule","$.get","$.each","div_1","temp","button_1","$.set_text","text","text_1","select_2","apply","e","$.snapshot","copyToClipboard","str","$.if","node_3","node_7","$.template_effect","button","createPattern","selectionKind","lockSendingPattern","container","messageHandler","event","receivedPattern","onMount","$.bind_this","div"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,11]}